{"name":"zap","version":"1.1.0","description":"Provides HWRPs for creating authoritative resources","long_description":"zap\n===\n\nLibrary cookbook for garbage collecting chef controlled resource sets.\n\nOne of the common pitfalls in chef land is the pattern of one deleting a\nresource definition from a recipe and the user wondering why the resource still\nexists on the system.\n\nFor example, on Monday a cronjob is added:\n\n```ruby\ncron 'collect stats' do\n  action\t:create\n  minute\t0\n  command '/usr/local/bin/collect-stats | mailto ops@nvwls.com'\nend\n```\n\nAfter a few days, the issue is figured out and that cron resource is removed\nfrom the recipe.  After uploading the new cookbook, they wonder why they are\nstill receiving email.\n\nThe issue that chef is great for describing actions.  I mean, *action* is part\nof the DSL.\n\nAt the 2013 Opscode Communit Summit, Matt Ray and I had a discussion regarding\nthis issue.  The name *authoritative cookbook* was coined.  If chef is deploying\nfiles to a .d directory, if there are files in that directory not converged by a\nresource, those files should be removed.\n\nThis pattern has been added to https://github.com/Youscribe/sysctl-cookbook\n\nI presented the zap pattern at ChefConf 2014. You can check out the\nvideo\nhttp://www.youtube.com/watch?v=4-So4AJlBI4&list=PL11cZfNdwNyMmx0msapJfuGsLV43C7XsA&feature=share&index=53\nand the slides\nhttps://speakerdeck.com/nvwls/building-authoritative-resource-sets\n\nThanks\n======\n\nUsers and groups support was provided by Sander Botman <sbotman@schubergphilis.com>.\nYum_repository support was provided by Sander van Harmelen <svanharmelen@schubergphilis.com>\nApt_repository support was provided by Helgi Þormar Þorbjörnsson <helgi@php.net>\n\nResource/Provider\n=================\n\nzap_directory\n-------------\n\n## Actions\n\n- **:delete** - Delete files and symlinks in a directory\n\n## Attribute Parameters\n\n- **pattern** - Pattern of files to match, i.e. `*.conf`, defaults to `*`\n- **recursive** - Recurse into subdirectories, defaults to `false`\n\n### Examples\n\n```ruby\nzap_directory '/etc/sysctl.d' do\n  pattern '*.conf'\nend\n```\n\nzap_crontab\n-----------\n\n## Actions\n\n- **:delete** - Delete jobs from a user's crontab\n\n## Attribute Parameters\n\n- **pattern** - Pattern of job names match, i.e. `test \\#*`, defaults to `*`\n\n### Examples\n\n```ruby\nzap_crontab 'root' do\n  pattern 'test \\#*'\nend\n```\n\nzap_users\n---------\n\nDelete users from `/etc/passwd` style files.\n`node['zap']['users']['keep']` contains an array of user names to\nkeep, i.e. `root`.\n\n## Actions\n\n- **:remove**\n\n## Example\n\n```ruby\nzap_users '/etc/passwd' do\n  # only zap users whose uid is greater than 500\n  filter { |u| u.uid > 500 }\nend\n```\n\nzap_groups\n----------\n\nDelete groups from `/etc/group` style files.\n`node['zap']['groups']['keep']` contains an array of group names to\nkeep, i.e. `wheel`.\n\n## Actions\n\n- **:remove**\n\n## Example\n\n```ruby\nzap_groups '/etc/group' do\n  # only zap groups whose gid is greater than 500\n  filter { |g| g.gid > 500 && g.name != 'nrpe' }\nend\n```\n\nzap\n---\n\nThis the base HWRP.\n\n## Example\n\n```ruby\nzap '/etc/sysctl.d' do\n  register :file, :template\n  collect { Dir.glob(\"#{base}/*\") }\nend\n```\n\nRecipes\n=======\n\nzap::apt_repos\n--------------\n\nRemove extraneous repos from `/etc/apt/sources.list.d`\n* `node['zap']['apt_repos']['pattern']` is a glob expression used to restrict the name space, defaults to `'*'`\n* `node['zap']['apt_repos']['immediately']` controls whether the zap is run immediately, defaults to `true`\n\nzap::cron_d\n-----------\n\nRemove extraneous `/etc/cron.d` entries\n* `node['zap']['cron_d']['pattern']` is a glob expression used to restrict the name space, defaults to `'*'`\n\nzap::init_d\n-----------\n\nDisable sysv-init services on centos-6\n* `node['zap']['init_d']['pattern']` is a glob expression used to restrict the name space, defaults to `'*'`\n\nzap::iptables_d\n---------------\n\nRemove `/etc/iptables.d` entries created by the iptables cookbook\n* `node['zap']['iptables_d']['pattern']` is a glob expression used to restrict the name space, defaults to `'*'`\n\nzap::sudoers_d\n--------------\n\nRemove extraneous `/etc/sudoers.d` entries\n* `node['zap']['sudoers_d']['pattern']` is a glob expression used to restrict the name space, defaults to `'*'`\n\nzap::yum_repos\n--------------\n\nRemove extraneous repos from `/etc/yum.repos.d`\n* `node['zap']['yum_repos']['pattern']` is a glob expression used to restrict the name space, defaults to `'*'`\n* `node['zap']['yum_repos']['immediately']` controls whether the zap is run immediately, defaults to `true`\n","maintainer":"Joseph J. Nuspl Jr.","maintainer_email":"nuspl@nvwls.com","license":"Apache 2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","fedora":">= 0.0.0","oracle":">= 0.0.0","redhat":">= 0.0.0","scientific":">= 0.0.0","debian":">= 0.0.0","ubuntu":">= 0.0.0","freebsd":">= 0.0.0","windows":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/nvwls/zap","issues_url":"https://github.com/nvwls/zap/issues","chef_version":[[">= 12.1"]],"ohai_version":[]}